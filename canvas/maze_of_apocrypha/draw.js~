// Holds all the functions for drawing stuff

var ctx;
var canvas;

var canW = 800;
var canH = 480;

var drawDist = 5;
var tileSize = 24;

function clearCanvas()
{
	ctx.globalCompositeOperation = 'destination-over';
	ctx.clearRect(0,0,canW,canH); // clear canvas
}

function drawMap()
{
	//Translates the map so the 24th tile is centered
	ctx.save();

	//move top left of the tiles to correct place
	ctx.translate(canW/2-(midTile+xoffset/offsetMax)*tileSize, canH/2-(midTile+yoffset/offsetMax)*tileSize); 

	//move to center for rotation
	ctx.translate((midTile+xoffset/offsetMax)*tileSize, (midTile+yoffset/offsetMax)*tileSize); 
	ctx.rotate(facing/180*Math.PI);
	ctx.translate(-(midTile+xoffset/offsetMax)*tileSize, -(midTile+yoffset/offsetMax)*tileSize); 
	//Undo that move so center is back
	

	//Drawing every tile is time consming
	//a lot of this is tricks for culling
	//stuff behind and far away. My guess
	//is this will be important for 3d

	var highX = (midTile+1+drawDist);
	var highY = (midTile+1+drawDist);
	var lowX = (midTile-drawDist);
	var lowY = (midTile-drawDist);
/*
	//leave out the facing part for a compromise
	if ((facing > 45) && (facing <= 135)) highX = midTile+1;
	else if ((facing > 135) && (facing <= 225)) lowY = midTile;
	else if ((facing > 225) && (facing <= 315)) lowX = midTile;
	else highY = midTile+1;
*/
	for(i=lowX;i<highX;i++)
	{
		for(j=lowY;j<highY;j++)
		{

/*
	//just draw it all, its fine for testing
	for(i=0;i<mapSize;i++)
	{
		for(j=0;j<mapSize;j++)
		{
*/
			//write the tile value over the tile!
			//ctx.fillStyle = "rgb(255,255,255)";
			//ctx.fillText(map[i][j], (i+0.5)*tileSize-4, (j+0.5)*tileSize+5);

			if(map[i][j] == 0) ctx.fillStyle = "rgb(0,0,0)";
			else if(map[i][j] == 21) ctx.fillStyle = "rgb(200,200,200)";
			else if(map[i][j] == 22) ctx.fillStyle = "rgb(200,200,255)";
			else ctx.fillStyle = "rgb(100,0,200)";

			ctx.fillRect(i*tileSize, j*tileSize, tileSize, tileSize);


		}
	}

	ctx.restore();
}

function drawPlayer()
{
	ctx.fillStyle = "rgb(255,255,255)";
	ctx.fillRect (399, 239, 2, 2);
}

